import tkinter as tk
from commands import *
from detect_time import RecognizeTimeCommand

def setup_ui(editor):
    root = editor.root

    editor.open_button = tk.Button(root, text="üìÇ –û—Ç–∫—Ä—ã—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ", command=editor.open_image, font=("Arial", 12))
    editor.open_button.pack(pady=10)

    btn_frame = tk.Frame(root)
    btn_frame.pack(pady=10)
    editor.btn_frame = btn_frame

    # --- –ë–∞–∑–æ–≤—ã–µ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è ---
    buttons_row1 = [
        ("–ß/–ë (—É—Å—Ä–µ–¥–Ω–µ–Ω–∏–µ)", GrayscaleAverageCommand),
        ("–ß/–ë (HSV V)", GrayscaleHSVCommand),
        ("–ë–∏–Ω–∞—Ä–∏–∑–∞—Ü–∏—è Otsu", BinarizationCommand),
    ]
    for col, (text, cmd_class) in enumerate(buttons_row1):
        btn = tk.Button(btn_frame, text=text, command=lambda c=cmd_class: editor.apply_command(c(editor)), width=18)
        btn.grid(row=0, column=col, padx=5, pady=5)
    
    # --- Undo ---
    editor.btn_undo = tk.Button(root, text="–û—Ç–º–µ–Ω–∏—Ç—å", command=editor.undo, width=15, bg="lightcoral")
    editor.btn_undo.pack(pady=5)

    # --- –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è –∏ –∫–æ–Ω—Ç—Ä–∞—Å—Ç ---
    buttons_row2 = [
        ("–ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è", NormalizeCommand),
        ("–†–∞—Å—Ç—è–∂–µ–Ω–∏–µ –∫–æ–Ω—Ç—Ä–∞—Å—Ç–∞", ContrastStretchCommand),
        ("–≠–∫–≤–∞–ª–∏–∑–∞—Ü–∏—è", EqualizeHistCommand)
    ]
    for col, (text, cmd_class) in enumerate(buttons_row2):
        btn = tk.Button(btn_frame, text=text, command=lambda c=cmd_class: editor.apply_command(c(editor)), width=18)
        btn.grid(row=1, column=col, padx=5, pady=5)

    # --- –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è ---
    buttons_row3 = [
        ("–†–∞–∑–º—ã—Ç–∏–µ –ì–∞—É—Å—Å–∞", GaussianBlurCommand),
        ("–†–µ–∑–∫–æ—Å—Ç—å", SharpenCommand),
        ("–°–æ–±–µ–ª—å", SobelEdgeCommand)
    ]
    for col, (text, cmd_class) in enumerate(buttons_row3):
        btn = tk.Button(editor.btn_frame, text=text, command=lambda c=cmd_class: editor.apply_command(c(editor)), width=18)
        btn.grid(row=2, column=col, padx=5, pady=5)

    # --- –ì–µ–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∏–µ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è ---
    buttons_row4 = [
        ("–°–¥–≤–∏–≥", ShiftCommand),
        ("–ü–æ–≤–æ—Ä–æ—Ç", RotateCommand)
    ]
    for col, (text, cmd_class) in enumerate(buttons_row4):
        btn = tk.Button(editor.btn_frame, text=text, command=lambda c=cmd_class: editor.apply_command(c(editor)), width=18)
        btn.grid(row=3, column=col, padx=5, pady=5)

    # --- Hough ---
    buttons_row5 = [
        ("Hough –õ–∏–Ω–∏–∏", HoughLinesCommand),
        ("Hough –ö—Ä—É–≥–∏", HoughCirclesCommand),
    ]
    for col, (text, cmd_class) in enumerate(buttons_row5):
        btn = tk.Button(btn_frame, text=text, command=lambda c=cmd_class: editor.apply_command(c(editor)), width=18)
        btn.grid(row=4, column=col, padx=5, pady=5)

    # --- –õ–æ–∫–∞–ª—å–Ω—ã–µ –ø—Ä–∏–∑–Ω–∞–∫–∏ –∏ —Å–µ–≥–º–µ–Ω—Ç–∞—Ü–∏—è ---
    buttons_row6 = [
        ("–õ–æ–∫–∞–ª—å–Ω—ã–µ –ø—Ä–∏–∑–Ω–∞–∫–∏", LocalStatsCommand),
        ("–°–µ–≥–º–µ–Ω—Ç–∞—Ü–∏—è (–ø–æ –∫–ª–∏–∫—É)", RegionGrowCommand),
        ("–ü–æ–∏—Å–∫ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏", RecognizeTimeCommand),
    ]
    for col, (text, cmd_class) in enumerate(buttons_row6):
        btn = tk.Button(btn_frame, text=text, command=lambda c=cmd_class: editor.apply_command(c(editor)), width=18, bg="lightblue")
        btn.grid(row=5, column=col, padx=5, pady=5)


    # --- –ü–æ—à–∞–≥–æ–≤–æ–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ ---
    def start_recognize_time():
        editor.step_command = RecognizeTimeCommand(editor)
        editor.step_command.start()

    def next_step_recognize_time():
        if hasattr(editor, 'step_command'):
            editor.step_command.next_step()
        else:
            messagebox.showinfo("–ò–Ω—Ñ–æ", "–°–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ '–ù–∞—á–∞—Ç—å —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏'")

    buttons_row6 = [
        ("–õ–æ–∫–∞–ª—å–Ω—ã–µ –ø—Ä–∏–∑–Ω–∞–∫–∏", LocalStatsCommand),
        ("–°–µ–≥–º–µ–Ω—Ç–∞—Ü–∏—è (–ø–æ –∫–ª–∏–∫—É)", RegionGrowCommand),
    ]
    for col, (text, cmd_class) in enumerate(buttons_row6):
        btn = tk.Button(btn_frame, text=text, command=lambda c=cmd_class: editor.apply_command(c(editor)), width=18, bg="lightblue")
        btn.grid(row=5, column=col, padx=5, pady=5)

    # –ö–Ω–æ–ø–∫–∏ –¥–ª—è –≤—Ä–µ–º–µ–Ω–∏
    btn_start_time = tk.Button(btn_frame, text="–ù–∞—á–∞—Ç—å —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏", command=start_recognize_time, width=18, bg="lightgreen")
    btn_start_time.grid(row=5, column=2, padx=5, pady=5)

    btn_next_step = tk.Button(btn_frame, text="–°–ª–µ–¥—É—é—â–∏–π —à–∞–≥", command=next_step_recognize_time, width=18, bg="orange")
    btn_next_step.grid(row=5, column=3, padx=5, pady=5)
